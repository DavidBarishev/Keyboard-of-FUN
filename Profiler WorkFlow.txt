class Profiler{
	INPUT - 
		gets an Profile[] and Profile.
	OUTPUT - 
		finds best match (Profile and one from Profile[]).

	1)for each profile in profile[] find the grade (percent) with profile(this.).
		1.1)The grade is affected from: 
			1.1.1)Pressed time of each letter (55%).
				//How should we do it???
				1.1.1.1) Use the ultimate average (same base percentage for each letter).
				1.1.1.2) Give more base percentage to letters that are pressed less.
				1.1.1.3) Give more base percentage to letters that are pressed more.
				1.1.1.4) //FEEL FREE TO ADD MORE IDEAS\\.
			1.1.2)The average Idle time to a letter (how much time does it take to press it after a letter)(20%).
				//How should we do it???
				1.1.1.1)reset if the idle time is more than average + (Final int MAX_IDLE_TIME). 
			1.1.3)//TODO ADD FACTOR\\(25%).

	2)find lowest percentage.
		2.1)

	3)return the profile with the lowest percentage.

}	

class //ADD YOUR CLASS IF YOU WANT\\{
	
}